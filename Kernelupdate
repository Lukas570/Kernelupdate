#!/bin/bash

# Regular Colors
BLACK='\033[0;30m'        # Black
RED='\033[0;31m'          # Red
GREEN='\033[0;32m'        # Green
YELLOW='\033[0;33m'       # Yellow
BLUE='\033[0;34m'         # Blue
PURPLE='\033[0;35m'       # Purple
CYAN='\033[0;36m'         # Cyan
WHITE='\033[0;37m'        # White



clear
echo -e "$CYAN Updating repositories$WHITE"
sleep 3
sudo apt update

echo -e "$CYAN Installing dependencies \n$WHITE"


    dpkg -s build-essential libncurses5-dev fakeroot xz-utils libelf-dev bison bc libssl-dev flex rsync dwarves wget bzip2 &> /dev/null

if [ $? -ne 0 ]

        then
            echo -e "$RED You are missing necessary packages!!!$WHITE"

	   echo -e "$CYAN Should I install the missing packages for you?$WHITE"

		select yn in "Yes" "No";
                do
                        case $yn in
                        Yes ) sudo apt-get update
            sudo apt-get install build-essential libncurses5-dev fakeroot xz-utils libelf-dev bison bc libssl-dev flex rsync dwarves wget bzip2 -y
            clear
            echo -e "$GREEN All packages installed successfully!!!$WHITE"
                              break;;
                        No ) echo -e "$RED The script can't be executed without the necessary packages! Exiting...!$WHITE"

				exit
				;;
                        esac
              done
        else
		clear
		echo -e "$GREEN All necessary packages installed successfully!!!"
    fi

sleep 3

echo -e "$CYAN Creating kernel-folder! $WHITE"

dload_dir=$HOME/kernel

if [ -d "$dload_dir" ]

	then
		clear
  		echo -e "$RED $dload_dir Already exists!"
		echo -e "$CYAN Should I purge $dload_dir and recreate it?$WHITE"

		select yn in "Yes" "No";
		do
  			case $yn in
    			Yes ) sudo rm -r ~/kernel
			      mkdir ~/kernel
			      echo -e "$GREEN New kernel-folder created successfully!$WHITE"
			     break;;
    			No ) break;;
			esac
		done


	else
  		echo -e "$RED $dload_dir Doesn't exist yet. Creating it for you!$WHITE"
  		mkdir ~/kernel
  		echo -e "$GREEN $dload_dir Successfully created!$WHITE"


fi


clear

WEBSITE="`wget -O - www.kernel.org | grep -A 120 'id=\"releases\"' | grep linux- | sed 's/\"/\n/g' |grep tar.xz`"

clear

echo -e "$CYAN Please choose the Kernel you want to install!$WHITE"


if [ -z "$WEBSITE" ]

        then
                echo
                echo -e "$RED Fetching of links wasn't possible. Check your internet-connection!!!$WHITE"
                sleep 3
                exit 1

        else

                select Download in $WEBSITE
                do
                        case $Download in
                                $WEBSITE)
                                break
                                   ;;
        *)
                        break
                           ;;
                        esac
                done

fi



clear

ARCHIV="`echo $Download | sed 's/\//\n/g' |grep tar.xz`"


if [ -z "$Download" ]


	then

		echo -e "$RED I couldn't find a kernel to install. Please try again!"
		exit 1

	else
                echo -e "$CYAN You chose $ARCHIV should I download it for you?$WHITE"

                select yn in "Yes" "No";
                do
                        case $yn in
                        Yes ) cd ~/kernel
                              wget $Download
			      tar -xavf $ARCHIV
			      rm $ARCHIV
				clear
			echo -e "$GREEN Download and extraction of the Kernel was successfull!$WHITE\n"
                              break;;
                        No )
            echo -e "$RED Okay? Please choose the right kernel the next time! $CYAN BYE :)"

            exit;;
                        esac
                done


fi


KERNEL=$HOME/kernel/*

LINUX=$HOME/kernel/linux-*

if [ -d "$LINUX" ]


		then
                echo -e "$RED I couldn't find a kernel in $WHITE $KERNEL $RED !\n"

			echo -e "$CYAN Please try again!$WHITE"
			sleep 3
			exit 1
			
			
			else
                echo -e "$CYAN Please choose the kernel you want to install!$WHITE"

			select File in $KERNEL
		do
        			case $File in
        			$KERNEL)
                		break
                		;;
        		*)
                		echo -e "$RED Invalid Value!$WHITE"
                		;;
	        		esac
		done
fi

echo -e "$CYAN Copying source-files to /usr/src!"

sudo cp -r $File /usr/src/

echo -e "$GREEN Copying done!"
clear

cd $File

cp /boot/config*`uname -r` .config

echo -e "$CYAN Patching Config-File"
sleep 2
sed -i 's/CONFIG_SYSTEM_TRUSTED_KEYS/#CONFIG_SYSTEM_TRUSTED_KEYS/g' .config
echo -e "$GREEN Config-File patched successfully!"
sleep 3
clear
sudo make clean

echo -e "$CYAN Starting makeprocess...!!!"


USERTHREADS="`lscpu | grep -m1 'CPU(s):' | cut -f 2 -d ":" | awk '{$1=$1}1'`"

echo -e "$CYAN You want to compile with the max. amount of threads($RED$USERTHREADS$CYAN)?$WHITE"

select yn in "Yes" "No";
                do
                   case $yn in
                        Yes )
                        break;;
                        No ) clear
				echo -e "$CYAN Your CPU is capable of running up to($RED$USERTHREADS$CYAN) threads simultaneously!"
				read -p "Number of threads:" USERTHREADS
				break;;
		    esac
		done
clear

sudo yes "" | make -j$USERTHREADS deb-pkg LOCALVERSION=-custom KDEB_PKGVERSION=$(make kernelversion)-1

clear
echo -e "$CYAN Following packages have been compiled:$WHITE"
ls ../*.deb | grep image


sleep 3

KERFOLDER=$HOME/kernel

echo -e "$CYAN Should I install the compiled packages?$WHITE"

			select yesno in "Yes" "No";
                do
                        case $yesno in
                        Yes ) sudo dpkg -i ../linux-image*custom_*.deb ../linux-headers*.deb
			      clear
			      echo -e "$CYAN Deleting kernel-folder!"
			      sudo rm -r $HOME/kernel
			      echo -e "$GREEN $KERFOLDER successfully deleted!"
			      sleep 3
			      clear
			      echo -e "$CYAN Installation of kernelpackages successfull!$WHITE \n"

				echo -e -n "$CYAN You want to restart your machine?$WHITE(y/n)"
				read RESTART
				if [$RESTART = y]
					then
						sudo reboot
					else
						clear
						echo -e "$CYAN You have to reboot in order to boot from the new kernel!"
						sleep 3
				fi

				break
				;;

			No )
			echo -e "$RED Leaving script!"
			sleep 3
				exit;;

                        esac
                done




